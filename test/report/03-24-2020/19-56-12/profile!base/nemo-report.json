{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2020-03-24T23:56:12.396Z",
    "end": "2020-03-24T23:56:17.965Z",
    "duration": 5569,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fca5e146-e887-4450-bb60-68468f508d9f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f7d38c3d-1958-4a50-955b-38b430549621",
          "title": "@firstTest@",
          "fullFile": "/home/eric/Projects2020/DemoNemo/test/nemo.test.js",
          "file": "/test/nemo.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "@firstTest@ \"before all\" hook",
              "timedOut": false,
              "duration": 1975,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (Suite.tests.length > 0) {\n  return createNemo()\n    .then(bindNemo.bind(this));\n}\nreturn;",
              "err": {},
              "uuid": "99ec50b4-8226-41a4-a060-f34f426d78d9",
              "parentUUID": "f7d38c3d-1958-4a50-955b-38b430549621",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "@firstTest@ \"before each\" hook",
              "timedOut": false,
              "duration": 1433,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// // Chroem driver issues ? follow this steps : https://tecadmin.net/setup-selenium-chromedriver-on-ubuntu/\nlet nemo = this.nemo;\n// let {nav, login, card} = nemo.view;\nawait nemo.driver.get(nemo.data.baseUrl);\n// await nav.jsLoaded.wait();\n// await login.email().sendKeys('me@mine.com');\n// await login.password().sendKeys('p4w3rD!');\n// await login.button().click();\n// await card.form.waitVisible(3000);",
              "err": {},
              "uuid": "fabdadb6-7c59-4b06-9174-98a810079a20",
              "parentUUID": "f7d38c3d-1958-4a50-955b-38b430549621",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: destroyNemo for \"should be able to reach Jquire website\"",
              "fullTitle": "@firstTest@ \"after all\" hook: destroyNemo for \"should be able to reach Jquire website\"",
              "timedOut": false,
              "duration": 16,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "log('destroyNemo: called');\nif (this.nemo) {\n  return this.nemo && this.nemo.driver && this.nemo.driver.quit()\n    .then(function () {\n      log('destroyNemo: Quit driver');\n      return Promise.resolve();\n    });\n}",
              "err": {
                "message": "NoSuchSessionError: This driver instance does not have a valid session ID (did you call WebDriver.quit()?) and may no longer be used.",
                "estack": "NoSuchSessionError: This driver instance does not have a valid session ID (did you call WebDriver.quit()?) and may no longer be used.\n    at session_.flow_.promise (node_modules/selenium-webdriver/lib/webdriver.js:847:16)\n    at new ManagedPromise (node_modules/selenium-webdriver/lib/promise.js:1077:7)\n    at ControlFlow.promise (node_modules/selenium-webdriver/lib/promise.js:2505:12)\n    at promise.finally (node_modules/selenium-webdriver/lib/webdriver.js:846:34)\n    at /home/eric/Projects2020/DemoNemo/node_modules/selenium-webdriver/lib/promise.js:1684:12\n    at ManagedPromise.invokeCallback_ (node_modules/selenium-webdriver/lib/promise.js:1376:14)\n    at TaskQueue.execute_ (node_modules/selenium-webdriver/lib/promise.js:3084:14)\n    at TaskQueue.executeNext_ (node_modules/selenium-webdriver/lib/promise.js:3067:27)\n    at asyncRun (node_modules/selenium-webdriver/lib/promise.js:2927:27)\n    at /home/eric/Projects2020/DemoNemo/node_modules/selenium-webdriver/lib/promise.js:668:7\nFrom: Task: WebDriver.quit()\n    at thenableWebDriverProxy.schedule (node_modules/selenium-webdriver/lib/webdriver.js:807:17)\n    at thenableWebDriverProxy.quit (node_modules/selenium-webdriver/lib/webdriver.js:840:23)",
                "diff": null
              },
              "uuid": "4a14dec8-afd5-4e1f-b574-fd4d56afd609",
              "parentUUID": "f7d38c3d-1958-4a50-955b-38b430549621",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "@firstTest@ \"after each\" hook",
              "timedOut": false,
              "duration": 2068,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let nemo = this.nemo;\nawait nemo.driver.sleep(2000);\nawait nemo.driver.quit();\n// let {nav, login} = nemo.view;\n// await nav.logoutLink().click();\n// await login.form.waitVisible(3000);",
              "err": {},
              "uuid": "01c31009-8bf9-4975-a02d-0981b5711329",
              "parentUUID": "f7d38c3d-1958-4a50-955b-38b430549621",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should be able to reach Jquire website",
              "fullTitle": "@firstTest@ should be able to reach Jquire website",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// ID locator\nlet nemo = this.nemo;\nlet title = await nemo.driver.get(nemo.document.title);\nconsole.log('page title is : ' + title);\n// let sideBar = await nemo.view._finds('#sidebar');\n// console.log(\"List of avaliable sidebars : \" + sideBar);\n// await nemo.snap();",
              "err": {
                "message": "TypeError: Cannot read property 'title' of undefined",
                "estack": "TypeError: Cannot read property 'title' of undefined\n    at Context.<anonymous> (test/nemo.test.js:26:53)",
                "diff": null
              },
              "uuid": "d2196a1e-cf34-480f-9ec2-b37431ec46de",
              "parentUUID": "f7d38c3d-1958-4a50-955b-38b430549621",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d2196a1e-cf34-480f-9ec2-b37431ec46de"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "nemo-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "quiet": true,
        "reportDir": "/home/eric/Projects2020/DemoNemo/test/report/03-24-2020/19-56-12/profile!base",
        "reportFilename": "nemo-report",
        "assetsDir": "/home/eric/Projects2020/DemoNemo/test/report/mochawesomeAssets"
      },
      "version": "4.1.0"
    }
  }
}