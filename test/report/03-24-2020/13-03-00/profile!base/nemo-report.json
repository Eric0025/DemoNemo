{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 0,
    "pending": 1,
    "failures": 1,
    "start": "2020-03-24T17:03:00.769Z",
    "end": "2020-03-24T17:03:03.386Z",
    "duration": 2617,
    "testsRegistered": 2,
    "passPercent": 0,
    "pendingPercent": 50,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6c8f3646-2179-4dea-a48b-cd43c4226478",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1eb4f83d-76f3-4eba-9b55-d4e87993c9f2",
          "title": "@firstTest@",
          "fullFile": "/home/eric/Projects2020/DemoNemo/test/nemo.test.js",
          "file": "/test/nemo.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "@firstTest@ \"before all\" hook",
              "timedOut": false,
              "duration": 2299,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (Suite.tests.length > 0) {\n  return createNemo()\n    .then(bindNemo.bind(this));\n}\nreturn;",
              "err": {},
              "uuid": "36d7df0f-8938-4586-bcc4-19c906dc28de",
              "parentUUID": "1eb4f83d-76f3-4eba-9b55-d4e87993c9f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: destroyNemo",
              "fullTitle": "@firstTest@ \"after all\" hook: destroyNemo",
              "timedOut": false,
              "duration": 154,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "log('destroyNemo: called');\nif (this.nemo) {\n  return this.nemo && this.nemo.driver && this.nemo.driver.quit()\n    .then(function () {\n      log('destroyNemo: Quit driver');\n      return Promise.resolve();\n    });\n}",
              "err": {},
              "uuid": "6f3bea2b-5237-441b-99a9-f30c2660568e",
              "parentUUID": "1eb4f83d-76f3-4eba-9b55-d4e87993c9f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should load a website",
              "fullTitle": "@firstTest@ should load a website",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Chroem driver issues ? follow this steps : https://tecadmin.net/setup-selenium-chromedriver-on-ubuntu/\nawait nemo.driver.get(this.nemo.data.baseUrl);\nlet sideBar = await nemo.view._find('#sidebar');\nconsole.log(\"List of avaliable sidebars : \" + sideBar);\nawait nemo.snap();  \nawait nemo.driver.sleep(4000);\nawait nemo.driver.quite();",
              "err": {
                "message": "TypeError: Cannot read property 'driver' of undefined",
                "estack": "TypeError: Cannot read property 'driver' of undefined\n    at Context.<anonymous> (test/nemo.test.js:5:16)",
                "diff": null
              },
              "uuid": "c2857420-6751-4fff-b5e9-61bdc66274b3",
              "parentUUID": "1eb4f83d-76f3-4eba-9b55-d4e87993c9f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should load a website",
              "fullTitle": "@firstTest@ should load a website",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "43a3e3b6-9022-42de-ab64-0afe52dc9173",
              "parentUUID": "1eb4f83d-76f3-4eba-9b55-d4e87993c9f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c2857420-6751-4fff-b5e9-61bdc66274b3"
          ],
          "pending": [
            "43a3e3b6-9022-42de-ab64-0afe52dc9173"
          ],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "nemo-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "quiet": true,
        "reportDir": "/home/eric/Projects2020/DemoNemo/test/report/03-24-2020/13-03-00/profile!base",
        "reportFilename": "nemo-report",
        "assetsDir": "/home/eric/Projects2020/DemoNemo/test/report/mochawesomeAssets"
      },
      "version": "4.1.0"
    }
  }
}